#####################################################################
# TypoScrip configuration for the plugin.damlightbox_pi1			#
# @author Torsten Schrade <schradt@uni-mainz.de>					#
# PART I: Configuration for pages									#
#####################################################################

## include the damlightbox class for tt_news image rendering ##
includeLibs.tx_damlightbox_pages = EXT:damlightbox/pi1/class.tx_damlightbox_pages.php

## configuration of example pages object ##

page.313 = COA
page.313 {

	stdWrap.wrap = <div class="plugin_txdamlightbox_pi1"> | </div>

	10 =< plugin.tx_damlightbox_pi1
	
	20 = USER
	20 {
		userFunc = tx_damlightbox_pi1->frontendImageIterator

		image = IMAGE
		image {
	
			file {
				import.cObject < lib.damlightbox.getDAMvalues
				import.cObject {
					cObject.value = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|fullPath
				}	
				maxW = 400
				maxH = 300
			}
	
			## alt texts from DAM ##
			altText.cObject < lib.damlightbox.getDAMvalues
			altText.cObject.cObject.value  = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|alt_text
			
			## title texts from DAM ##
			titleText.cObject < lib.damlightbox.getDAMvalues
			titleText.cObject.cObject.value  = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|title
			
			imageLinkWrap = 1
			imageLinkWrap {
				enable = 1
				typolink {
				
					## caching ##
					no_cache = 0
					useCacheHash = 1
					
					parameter.data = TSFE:id
					
					parameter.append = TEXT
					parameter.append {
						if.isFalse.field = image_link
						value = {$plugin.damlightbox.jsParams}
						noTrimWrap = | ||
					}				
						
					additionalParams.cObject = TEXT
					additionalParams.cObject {
						htmlspecialchars = 1
						dataWrap = |&type=313&content=pages_{field:uid}&img={register:currentImg}
					}
					
					ATagParams.cObject = TEXT
					ATagParams.cObject {
						value = {$plugin.damlightbox.imageLinkAttributes}
					}
				}
			}
	
			stdWrap.postCObject = COA
			stdWrap.postCObject {
				
				stdWrap.outerWrap = <p class="caption"> | </p>
				stdWrap.required = 1	
	
				## if selected first insert the copyright notice ##
				10 < lib.damlightbox.getDAMvalues
				10 {
					cObject.value = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|copyright
					if.isTrue.data = TSFE:register|tx_damlightbox|config|sDEF|showCopyright
					outerWrap = {$plugin.damlightbox.copyrightWrap}
				}
				
				20 < lib.damlightbox.getDAMvalues
				20.cObject.value = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|{TSFE:register|tx_damlightbox|config|sDEF|imgCaption}
				20.if.isTrue.data = TSFE:register|tx_damlightbox|config|sDEF|imgCaption
			}
		}
		
		## advanced feature: slide option for pages ##
		stdWrap.ifEmpty.cObject = USER
		stdWrap.ifEmpty.cObject {
		
			userFunc = tx_damlightbox_pages->rootLineSlide
			
			image < page.313.20.image
		}
	}
}

## pmkslimbox setup ##

[globalVar = LIT:pmkslimbox = {$plugin.damlightbox.lightboxExtension}]

page.10 = TEXT
page.10.value = Hello world

page.313 {
	20.image.imageLinkWrap.typolink {
		parameter.append >
		
		ATagParams >
		ATagParams < lib.damlightbox.pmkslimbox.imageLinkWrap.typolink.ATagParams
	}
	stdWrap.postCObject = TEXT
	stdWrap.postCObject {
		if.isTrue.data = TSFE:register|tx_damlightbox|config|sDEF|imgPreview
		cObject = USER
		cObject.userFunc = tx_damlightbox_pmkslimbox->addHiddenImgs
		cObject {
			content.data = field:uid
			content.table = pages
			hCalc.cObject = TEXT
			hCalc.cObject.value = {$plugin.damlightbox.pmkslimbox.hCalc}
			vCalc.cObject = TEXT
			vCalc.cObject.value = {$plugin.damlightbox.pmkslimbox.vCalc}
		}
	}
}

[global]

#####################################################################
# TypoScrip configuration for the plugin.damlightbox_pi1			#
# @author Torsten Schrade <schradt@uni-mainz.de>					#
# PART II: configuration for click-enlarge for pages				#
#####################################################################

damlightbox {
	10.10.tables := addToList(pages)
	10.10.conf.pages =< lib.damlightbox.clickEnlargeConf
}