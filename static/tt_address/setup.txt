#####################################################################
# TypoScrip configuration for the plugin.damlightbox_pi1			#
# @author Torsten Schrade <schradt@uni-mainz.de>					#
# PART I: Configuration for tt_address								#
#####################################################################

## configuration of example tt_address object ##

plugin.tx_ttaddress_pi1.templates.default.dam_image.cObject = COA
plugin.tx_ttaddress_pi1.templates.default.dam_image.cObject {

	10 =< plugin.tx_damlightbox_pi1
	
	20 = USER
	20 {
		userFunc = tx_damlightbox_pi1->frontendImageIterator
	
		file {
			import.cObject < lib.damlightbox.getDAMvalues
			import.cObject {
				cObject.value = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|fullPath
			}	
			maxW = 300
			maxH = 200
		}

		## alt texts from DAM ##
		altText.cObject < lib.damlightbox.getDAMvalues
		altText.cObject.cObject.value  = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|alt_text
		
		## title texts from DAM ##
		titleText.cObject < lib.damlightbox.getDAMvalues
		titleText.cObject.cObject.value  = TSFE:register|tx_damlightbox|metaData|{register:currentImg}|title
		
		## image link for click enlarge ##
		imageLinkWrap = 1
		imageLinkWrap {
			enable = 1
			typolink {
			
				## caching ##
				no_cache = 0
				useCacheHash = 1
				
				parameter.data = TSFE:id
				
				parameter.append = TEXT
				parameter.append {
					if.isFalse.field = image_link
					value = {$plugin.damlightbox.jsParams}
					noTrimWrap = | ||
				}				
					
				additionalParams.cObject = TEXT
				additionalParams.cObject {
					htmlspecialchars = 1
					dataWrap = |&type=313&content=tt_address_{field:uid}&img={register:currentImg}
				}
				
				ATagParams.cObject = TEXT
				ATagParams.cObject {
					value = {$plugin.damlightbox.imageLinkAttributes}
				}
			}
		}
	}
}

#####################################################################
# TypoScrip configuration for the plugin.damlightbox_pi1			#
# @author Torsten Schrade <schradt@uni-mainz.de>					#
# PART II: click-enlarge for tt_address								#
#####################################################################

## register tt_address table in the click-enlargement pagetype ##
damlightbox {
	10.10.tables := addToList(tt_address)
	10.10.conf.tt_address =< lib.damlightbox.clickEnlargeConf
	10.10.conf.tt_address.20.marks.CE_TITLE.field = name
}

#####################################################################
# TypoScrip configuration for the plugin.damlightbox_pi1			#
# @author Torsten Schrade <schradt@uni-mainz.de>					#
# PART III: config for tt_address & pmkslimbox						#
#####################################################################

[globalVar = LIT:pmkslimbox = {$plugin.damlightbox.lightboxExtension}]

plugin.tx_ttaddress_pi1.templates.default.dam_image.cObject {

	20.imageLinkWrap.typolink {
	
		parameter.append >
		
		ATagParams >
		ATagParams < lib.damlightbox.pmkslimbox.imageLinkWrap.typolink.ATagParams
	}	
	stdWrap.postCObject = TEXT
	stdWrap.postCObject {
		if.isTrue.data = TSFE:register|tx_damlightbox|config|sDEF|imgPreview
		cObject = USER
		cObject.userFunc = tx_damlightbox_pmkslimbox->addHiddenImgs
		cObject {
			content.data = field:uid
			content.table = tt_address

			lbCaption < plugin.tx_ttaddress_pi1.templates.default.dam_image.cObject.20.imageLinkWrap.typolink.ATagParams.cObject.10.lbCaption

			linkConfig {
				no_cache = 0
				useCacheHash = 1
				ATagParams.dataWrap = rel="lightbox[sb{field:uid}]" rev="width={register:widthCalc}, height={register:heightCalc}, src={register:fullPath}" title="{register:lbCaption}"
			}
			
			hCalc.cObject = TEXT
			hCalc.cObject.value = {$plugin.damlightbox.pmkslimbox.hCalc}
			vCalc.cObject = TEXT
			vCalc.cObject.value = {$plugin.damlightbox.pmkslimbox.vCalc}
		}
	}
}

damlightbox {
	10.10.conf.tt_address.20 {
		
		template.file = {$plugin.damlightbox.pmkslimbox.templateFile}
		marks.CE_TITLE >

		marks.DAM_TITLE.outerWrap >
	
	}
}

[global]